(()=>{"use strict";var n={16:(n,r,e)=>{e.d(r,{A:()=>d});var t=e(354),a=e.n(t),o=e(314),c=e.n(o)()(a());c.push([n.id,"body {\n  font-family: Arial, sans-serif;\n  background-color: #f5f5f5;\n  margin: 0;\n  padding: 0;\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  min-height: 100vh;\n  overflow: auto;\n}\n\n.board {\n  display: flex;\n  justify-content: space-around;\n  width: 100%;\n  max-width: 1200px;\n  overflow-x: auto;\n  align-items: flex-start;\n}\n\n.column {\n  background-color: #FFFAF0;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  border-radius: 8px;\n  padding: 15px;\n  width: 300px;\n  margin: 0 25px;\n  flex-shrink: 0;\n  display: flex;\n  flex-direction: column;\n  min-height: 100px;\n}\n\n.column-header {\n  font-size: 18px;\n  font-weight: bold;\n  color: #FF4500;\n  margin-bottom: 10px;\n}\n\n.card-container {\n  flex-grow: 1;\n}\n\n.card {\n  background-color: #fff;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  border-radius: 8px;\n  padding: 10px;\n  margin-bottom: 10px;\n  cursor: grab;\n  transition: box-shadow 0.3s;\n  position: relative;\n}\n\n.card.expanded .card-text {\n  max-height: none;\n  overflow: visible;\n  white-space: normal;\n}\n\n.card-text {\n  max-height: 60px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.card-actions {\n  display: flex;\n  justify-content: space-between;\n  gap: 10px;\n  margin-top: 10px;\n}\n\n.card-actions-left {\n  display: flex;\n  gap: 10px;\n}\n\n.card-actions-right {\n  display: flex;\n}\n\n.card .card-actions .edit-btn,\n.card .card-actions .expand-btn,\n.card .card-actions .delete-btn {\n  cursor: pointer;\n  font-size: 18px;\n  color: black;\n  transition: color 0.3s;\n}\n\n.card .card-actions .edit-btn:hover {\n  color: #0079bf;\n}\n\n.card .card-actions .expand-btn:hover {\n  color: #28a745;\n}\n\n.card .card-actions .delete-btn:hover {\n  color: #dc3545;\n}\n\n.add-card-btn {\n  background-color: transparent;\n  border: none;\n  color: #0079bf;\n  cursor: pointer;\n  padding: 10px;\n  margin: 0;\n  text-align: left;\n  display: block;\n  width: 100%;\n  box-sizing: border-box;\n}\n\n.add-card-input {\n  display: none;\n  flex-direction: column;\n  align-items: flex-start;\n}\n\n.add-card-input.active {\n  display: flex;\n}\n\n.add-card-input textarea {\n  width: 100%;\n  padding: 10px;\n  margin-bottom: 10px;\n  border: 1px solid #ced4da;\n  border-radius: 5px;\n  box-sizing: border-box;\n  resize: vertical;\n  max-height: 200px;\n  overflow: hidden;\n  font-size: 14px;\n}\n\n.add-card-input .input-actions {\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n}\n\n.char-counter {\n  display: inline-block;\n  font-size: 0.8rem;\n  color: #6c757d;\n  margin-top: 5px;\n}\n\n.char-counter.red {\n  color: #dc3545;\n}\n\n.add-card-input .add-btn,\n.add-card-input .cancel-btn,\n.card-content .save-btn,\n.card-content .close-btn {\n  padding: 5px 10px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  color: white;\n  font-weight: bold;\n  margin-right: 5px;\n  transition: background-color 0.3s;\n}\n\n.add-card-input .add-btn {\n  background-color: #28a745;\n}\n\n.add-card-input .add-btn:hover {\n  background-color: #218838;\n}\n\n.add-card-input .cancel-btn {\n  background-color: #dc3545;\n}\n\n.add-card-input .cancel-btn:hover {\n  background-color: #c82333;\n}\n\n.card-content .save-btn {\n  background-color: #28a745;\n}\n\n.card-content .save-btn:hover {\n  background-color: #218838;\n}\n\n.card-content .close-btn {\n  background-color: #dc3545;\n}\n\n.card-content .close-btn:hover {\n  background-color: #c82333;\n}\n\n.add-card-input .error {\n  border-color: #dc3545;\n  animation: shake 0.3s;\n}\n\n@keyframes shake {\n  0%, 100% { transform: translateX(0); }\n  25% { transform: translateX(-5px); }\n  50% { transform: translateX(5px); }\n  75% { transform: translateX(-5px); }\n}\n\n.error {\n  border: 2px solid red !important;\n}\n\n.card-placeholder {\n  height: 60px;\n  background-color: rgba(0, 0, 0, 0.1);\n  border-radius: 5px;\n  display: none;\n}\n","",{version:3,sources:["webpack://./src/css/style.css"],names:[],mappings:"AAAA;EACE,8BAA8B;EAC9B,yBAAyB;EACzB,SAAS;EACT,UAAU;EACV,aAAa;EACb,uBAAuB;EACvB,uBAAuB;EACvB,iBAAiB;EACjB,cAAc;AAChB;;AAEA;EACE,aAAa;EACb,6BAA6B;EAC7B,WAAW;EACX,iBAAiB;EACjB,gBAAgB;EAChB,uBAAuB;AACzB;;AAEA;EACE,yBAAyB;EACzB,wCAAwC;EACxC,kBAAkB;EAClB,aAAa;EACb,YAAY;EACZ,cAAc;EACd,cAAc;EACd,aAAa;EACb,sBAAsB;EACtB,iBAAiB;AACnB;;AAEA;EACE,eAAe;EACf,iBAAiB;EACjB,cAAc;EACd,mBAAmB;AACrB;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,sBAAsB;EACtB,wCAAwC;EACxC,kBAAkB;EAClB,aAAa;EACb,mBAAmB;EACnB,YAAY;EACZ,2BAA2B;EAC3B,kBAAkB;AACpB;;AAEA;EACE,gBAAgB;EAChB,iBAAiB;EACjB,mBAAmB;AACrB;;AAEA;EACE,gBAAgB;EAChB,gBAAgB;EAChB,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,SAAS;EACT,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,SAAS;AACX;;AAEA;EACE,aAAa;AACf;;AAEA;;;EAGE,eAAe;EACf,eAAe;EACf,YAAY;EACZ,sBAAsB;AACxB;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,6BAA6B;EAC7B,YAAY;EACZ,cAAc;EACd,eAAe;EACf,aAAa;EACb,SAAS;EACT,gBAAgB;EAChB,cAAc;EACd,WAAW;EACX,sBAAsB;AACxB;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,uBAAuB;AACzB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,WAAW;EACX,aAAa;EACb,mBAAmB;EACnB,yBAAyB;EACzB,kBAAkB;EAClB,sBAAsB;EACtB,gBAAgB;EAChB,iBAAiB;EACjB,gBAAgB;EAChB,eAAe;AACjB;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,WAAW;AACb;;AAEA;EACE,qBAAqB;EACrB,iBAAiB;EACjB,cAAc;EACd,eAAe;AACjB;;AAEA;EACE,cAAc;AAChB;;AAEA;;;;EAIE,iBAAiB;EACjB,YAAY;EACZ,kBAAkB;EAClB,eAAe;EACf,YAAY;EACZ,iBAAiB;EACjB,iBAAiB;EACjB,iCAAiC;AACnC;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,qBAAqB;EACrB,qBAAqB;AACvB;;AAEA;EACE,WAAW,wBAAwB,EAAE;EACrC,MAAM,2BAA2B,EAAE;EACnC,MAAM,0BAA0B,EAAE;EAClC,MAAM,2BAA2B,EAAE;AACrC;;AAEA;EACE,gCAAgC;AAClC;;AAEA;EACE,YAAY;EACZ,oCAAoC;EACpC,kBAAkB;EAClB,aAAa;AACf",sourcesContent:["body {\r\n  font-family: Arial, sans-serif;\r\n  background-color: #f5f5f5;\r\n  margin: 0;\r\n  padding: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  min-height: 100vh;\r\n  overflow: auto;\r\n}\r\n\r\n.board {\r\n  display: flex;\r\n  justify-content: space-around;\r\n  width: 100%;\r\n  max-width: 1200px;\r\n  overflow-x: auto;\r\n  align-items: flex-start;\r\n}\r\n\r\n.column {\r\n  background-color: #FFFAF0;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  border-radius: 8px;\r\n  padding: 15px;\r\n  width: 300px;\r\n  margin: 0 25px;\r\n  flex-shrink: 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 100px;\r\n}\r\n\r\n.column-header {\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  color: #FF4500;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.card-container {\r\n  flex-grow: 1;\r\n}\r\n\r\n.card {\r\n  background-color: #fff;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n  border-radius: 8px;\r\n  padding: 10px;\r\n  margin-bottom: 10px;\r\n  cursor: grab;\r\n  transition: box-shadow 0.3s;\r\n  position: relative;\r\n}\r\n\r\n.card.expanded .card-text {\r\n  max-height: none;\r\n  overflow: visible;\r\n  white-space: normal;\r\n}\r\n\r\n.card-text {\r\n  max-height: 60px;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n}\r\n\r\n.card-actions {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  gap: 10px;\r\n  margin-top: 10px;\r\n}\r\n\r\n.card-actions-left {\r\n  display: flex;\r\n  gap: 10px;\r\n}\r\n\r\n.card-actions-right {\r\n  display: flex;\r\n}\r\n\r\n.card .card-actions .edit-btn,\r\n.card .card-actions .expand-btn,\r\n.card .card-actions .delete-btn {\r\n  cursor: pointer;\r\n  font-size: 18px;\r\n  color: black;\r\n  transition: color 0.3s;\r\n}\r\n\r\n.card .card-actions .edit-btn:hover {\r\n  color: #0079bf;\r\n}\r\n\r\n.card .card-actions .expand-btn:hover {\r\n  color: #28a745;\r\n}\r\n\r\n.card .card-actions .delete-btn:hover {\r\n  color: #dc3545;\r\n}\r\n\r\n.add-card-btn {\r\n  background-color: transparent;\r\n  border: none;\r\n  color: #0079bf;\r\n  cursor: pointer;\r\n  padding: 10px;\r\n  margin: 0;\r\n  text-align: left;\r\n  display: block;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.add-card-input {\r\n  display: none;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n}\r\n\r\n.add-card-input.active {\r\n  display: flex;\r\n}\r\n\r\n.add-card-input textarea {\r\n  width: 100%;\r\n  padding: 10px;\r\n  margin-bottom: 10px;\r\n  border: 1px solid #ced4da;\r\n  border-radius: 5px;\r\n  box-sizing: border-box;\r\n  resize: vertical;\r\n  max-height: 200px;\r\n  overflow: hidden;\r\n  font-size: 14px;\r\n}\r\n\r\n.add-card-input .input-actions {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n}\r\n\r\n.char-counter {\r\n  display: inline-block;\r\n  font-size: 0.8rem;\r\n  color: #6c757d;\r\n  margin-top: 5px;\r\n}\r\n\r\n.char-counter.red {\r\n  color: #dc3545;\r\n}\r\n\r\n.add-card-input .add-btn,\r\n.add-card-input .cancel-btn,\r\n.card-content .save-btn,\r\n.card-content .close-btn {\r\n  padding: 5px 10px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  color: white;\r\n  font-weight: bold;\r\n  margin-right: 5px;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.add-card-input .add-btn {\r\n  background-color: #28a745;\r\n}\r\n\r\n.add-card-input .add-btn:hover {\r\n  background-color: #218838;\r\n}\r\n\r\n.add-card-input .cancel-btn {\r\n  background-color: #dc3545;\r\n}\r\n\r\n.add-card-input .cancel-btn:hover {\r\n  background-color: #c82333;\r\n}\r\n\r\n.card-content .save-btn {\r\n  background-color: #28a745;\r\n}\r\n\r\n.card-content .save-btn:hover {\r\n  background-color: #218838;\r\n}\r\n\r\n.card-content .close-btn {\r\n  background-color: #dc3545;\r\n}\r\n\r\n.card-content .close-btn:hover {\r\n  background-color: #c82333;\r\n}\r\n\r\n.add-card-input .error {\r\n  border-color: #dc3545;\r\n  animation: shake 0.3s;\r\n}\r\n\r\n@keyframes shake {\r\n  0%, 100% { transform: translateX(0); }\r\n  25% { transform: translateX(-5px); }\r\n  50% { transform: translateX(5px); }\r\n  75% { transform: translateX(-5px); }\r\n}\r\n\r\n.error {\r\n  border: 2px solid red !important;\r\n}\r\n\r\n.card-placeholder {\r\n  height: 60px;\r\n  background-color: rgba(0, 0, 0, 0.1);\r\n  border-radius: 5px;\r\n  display: none;\r\n}\r\n"],sourceRoot:""}]);const d=c},314:n=>{n.exports=function(n){var r=[];return r.toString=function(){return this.map((function(r){var e="",t=void 0!==r[5];return r[4]&&(e+="@supports (".concat(r[4],") {")),r[2]&&(e+="@media ".concat(r[2]," {")),t&&(e+="@layer".concat(r[5].length>0?" ".concat(r[5]):""," {")),e+=n(r),t&&(e+="}"),r[2]&&(e+="}"),r[4]&&(e+="}"),e})).join("")},r.i=function(n,e,t,a,o){"string"==typeof n&&(n=[[null,n,void 0]]);var c={};if(t)for(var d=0;d<this.length;d++){var i=this[d][0];null!=i&&(c[i]=!0)}for(var A=0;A<n.length;A++){var s=[].concat(n[A]);t&&c[s[0]]||(void 0!==o&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=o),e&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=e):s[2]=e),a&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=a):s[4]="".concat(a)),r.push(s))}},r}},354:n=>{n.exports=function(n){var r=n[1],e=n[3];if(!e)return r;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),o="/*# ".concat(a," */");return[r].concat([o]).join("\n")}return[r].join("\n")}},72:n=>{var r=[];function e(n){for(var e=-1,t=0;t<r.length;t++)if(r[t].identifier===n){e=t;break}return e}function t(n,t){for(var o={},c=[],d=0;d<n.length;d++){var i=n[d],A=t.base?i[0]+t.base:i[0],s=o[A]||0,l="".concat(A," ").concat(s);o[A]=s+1;var p=e(l),u={css:i[1],media:i[2],sourceMap:i[3],supports:i[4],layer:i[5]};if(-1!==p)r[p].references++,r[p].updater(u);else{var E=a(u,t);t.byIndex=d,r.splice(d,0,{identifier:l,updater:E,references:1})}c.push(l)}return c}function a(n,r){var e=r.domAPI(r);return e.update(n),function(r){if(r){if(r.css===n.css&&r.media===n.media&&r.sourceMap===n.sourceMap&&r.supports===n.supports&&r.layer===n.layer)return;e.update(n=r)}else e.remove()}}n.exports=function(n,a){var o=t(n=n||[],a=a||{});return function(n){n=n||[];for(var c=0;c<o.length;c++){var d=e(o[c]);r[d].references--}for(var i=t(n,a),A=0;A<o.length;A++){var s=e(o[A]);0===r[s].references&&(r[s].updater(),r.splice(s,1))}o=i}}},659:n=>{var r={};n.exports=function(n,e){var t=function(n){if(void 0===r[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}r[n]=e}return r[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(e)}},540:n=>{n.exports=function(n){var r=document.createElement("style");return n.setAttributes(r,n.attributes),n.insert(r,n.options),r}},56:(n,r,e)=>{n.exports=function(n){var r=e.nc;r&&n.setAttribute("nonce",r)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var r=n.insertStyleElement(n);return{update:function(e){!function(n,r,e){var t="";e.supports&&(t+="@supports (".concat(e.supports,") {")),e.media&&(t+="@media ".concat(e.media," {"));var a=void 0!==e.layer;a&&(t+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),t+=e.css,a&&(t+="}"),e.media&&(t+="}"),e.supports&&(t+="}");var o=e.sourceMap;o&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),r.styleTagTransform(t,n,r.options)}(r,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(r)}}}},113:n=>{n.exports=function(n,r){if(r.styleSheet)r.styleSheet.cssText=n;else{for(;r.firstChild;)r.removeChild(r.firstChild);r.appendChild(document.createTextNode(n))}}}},r={};function e(t){var a=r[t];if(void 0!==a)return a.exports;var o=r[t]={id:t,exports:{}};return n[t](o,o.exports,e),o.exports}e.n=n=>{var r=n&&n.__esModule?()=>n.default:()=>n;return e.d(r,{a:r}),r},e.d=(n,r)=>{for(var t in r)e.o(r,t)&&!e.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:r[t]})},e.o=(n,r)=>Object.prototype.hasOwnProperty.call(n,r),e.nc=void 0;var t=e(72),a=e.n(t),o=e(825),c=e.n(o),d=e(659),i=e.n(d),A=e(56),s=e.n(A),l=e(540),p=e.n(l),u=e(113),E=e.n(u),f=e(16),b={};b.styleTagTransform=E(),b.setAttributes=s(),b.insert=i().bind(null,"head"),b.domAPI=c(),b.insertStyleElement=p(),a()(f.A,b),f.A&&f.A.locals&&f.A.locals,document.addEventListener("DOMContentLoaded",(()=>{const n="trelloCloneData",r=JSON.parse(localStorage.getItem(n))||{todo:[],inprogress:[],done:[]};let e=null,t=null,a=null,o=null;function c(){localStorage.setItem(n,JSON.stringify(r))}function d(){["todo","inprogress","done"].forEach((n=>{const e=document.getElementById(`${n}-cards`);e&&(e.innerHTML="",r[n].forEach(((t,u)=>{const f=function(n,e,t){const u=document.createElement("div");return u.className="card",u.draggable=!0,u.dataset.index=e,u.dataset.status=t,u.innerHTML=`\n      <div class="card-content">\n        <div class="card-text">${n}</div>\n      </div>\n      <div class="card-actions">\n        <div class="card-actions-left">\n          <span class="edit-btn">✎</span>\n          <span class="expand-btn">↕</span>\n        </div>\n        <div class="card-actions-right">\n          <span class="delete-btn">×</span>\n        </div>\n      </div>\n    `,u.addEventListener("dragstart",i),u.addEventListener("dragover",A),u.addEventListener("drop",s),u.addEventListener("dragend",l),u.querySelector(".delete-btn").addEventListener("click",(()=>{!function(n,e){r[n].splice(e,1),c(),d()}(t,e)})),u.querySelector(".edit-btn").addEventListener("click",(()=>{o||a?E(a||o):function(n,e,t){if(o||a)return void E(a||o);a=t;const i=t.querySelector(".card-content"),A=t.querySelector(".card-text").textContent;i.innerHTML="";const s=document.createElement("textarea");s.value=A,s.className="card-textarea",s.style.width="100%",s.style.height="60px",s.style.resize="none";const l=document.createElement("div");l.className="char-counter",l.textContent=`${s.value.length}/100`;const u=document.createElement("button");u.className="save-btn",u.textContent="Save";const f=document.createElement("span");f.className="close-btn",f.textContent="×",i.appendChild(s),i.appendChild(l),i.appendChild(u),i.appendChild(f),s.focus(),t.querySelector(".card-actions").style.display="none",s.addEventListener("input",(()=>{const n=s.value.length;l.textContent=`${n}/100`,l.style.color=n>100?"red":"black",n>100&&(s.value=s.value.substring(0,100),l.textContent="100/100")})),u.addEventListener("click",(()=>{const t=s.value.trim();t!==A&&(r[n][e]=t,c(),d()),p()})),f.addEventListener("click",(()=>{p(),i.innerHTML=`<div class="card-text">${A}</div>`,t.querySelector(".card-actions").style.display="flex"}))}(t,e,u)})),u.querySelector(".expand-btn").addEventListener("click",(()=>{!function(n){n.classList.toggle("expanded")}(u)})),u}(t,u,n);e.appendChild(f)})),function(n,r){let e=n.querySelector(".card-placeholder");e||(e=document.createElement("div"),e.className="card-placeholder",e.style.border="2px dashed #ccc",e.style.padding="1rem",e.style.margin="1rem 0",e.style.textAlign="center",e.textContent="Drag and drop or create a new card",e.addEventListener("dragover",A),e.addEventListener("drop",s),n.appendChild(e)),e.style.display=r?"block":"none"}(e,0===r[n].length))}))}function i(n){e=n.target,n.dataTransfer.setData("text/plain",JSON.stringify({index:n.target.dataset.index,status:n.target.dataset.status})),n.dataTransfer.effectAllowed="move",n.target.style.opacity="0.5",n.target.style.cursor="grabbing";const r=n.target.cloneNode(!0);r.style.position="absolute",r.style.top="-999px",r.style.left="-999px",document.body.appendChild(r),n.dataTransfer.setDragImage(r,0,0)}function A(n){n.preventDefault(),n.dataTransfer.dropEffect="move";const r=n.target.closest(".card"),a=n.target.closest(".card-placeholder"),o=n.target.closest(".column");if(a)t={column:a.closest(".column")};else if(r&&r!==e){const e=r.getBoundingClientRect();n.clientY-e.top>e.height/2?(r.style.marginTop="",r.style.marginBottom="60px",t={card:r,position:"below"}):(r.style.marginTop="60px",r.style.marginBottom="",t={card:r,position:"above"})}else o&&(t={column:o});u(),t&&t.card&&("above"===t.position?t.card.style.borderTop="3px solid orange":t.card.style.borderBottom="3px solid orange")}function s(n){n.preventDefault(),u();const e=JSON.parse(n.dataTransfer.getData("text/plain")),a=e.status,o=parseInt(e.index,10);let i="",A=0;t&&t.column?(i=t.column.id.replace("-column",""),A=r[i].length):t&&t.card&&(i=t.card.closest(".column").id.replace("-column",""),A=Array.from(t.card.parentNode.children).indexOf(t.card),"below"===t.position&&(A+=1)),i&&r[i]&&function(n,e,t,a){const[o]=r[n].splice(e,1);r[t].splice(a,0,o),c(),d()}(a,o,i,A)}function l(n){n.target.style.opacity="1",n.target.style.cursor="grab",e=null,t=null,u(),document.body.querySelectorAll(".drag-preview").forEach((n=>n.remove()))}function p(){a&&(a.querySelector(".card-actions").style.display="flex",a=null)}function u(){document.querySelectorAll(".card").forEach((n=>{n.style.borderTop="",n.style.borderBottom="",n.style.marginTop="",n.style.marginBottom=""}))}function E(n){n&&(n.classList.add("error"),setTimeout((()=>{n.classList.remove("error")}),1e3))}document.querySelectorAll(".add-card-btn").forEach((n=>{n.addEventListener("click",(()=>{a||o?E(a||o):(o=n.closest(".column"),o.querySelector(".add-card-input").style.display="flex",n.style.display="none")}))})),document.querySelectorAll(".cancel-btn").forEach((n=>{n.addEventListener("click",(()=>{const r=n.closest(".add-card-input");r.style.display="none",r.previousElementSibling.style.display="block",r.querySelector(".new-card-text").value="",o=null}))})),document.querySelectorAll(".add-btn").forEach((n=>{n.addEventListener("click",(()=>{const e=n.closest(".add-card-input"),t=e.querySelector(".new-card-text"),a=e.querySelector(".char-counter"),i=t.value.trim(),A=n.closest(".column").id.replace("-column","");i&&(r[A].push(i),c(),d(),t.value="",a.textContent="0/100",a.style.color="black",e.style.display="none",e.previousElementSibling.style.display="block",o=null)}))})),document.querySelectorAll(".new-card-text").forEach((n=>{n.addEventListener("input",(r=>{const e=n.closest(".add-card-input").querySelector(".char-counter"),t=n.value.length;e.textContent=`${t}/100`,e.style.color=t>100?"red":"black",t>100&&(n.value=n.value.substring(0,100),e.textContent="100/100")}))})),d()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,